server:
  port: 443
  http:
    port: 8080
  ssl:
    enabled: true
    key-store: classpath:kejiapi.cn.jks
    key-store-password: ${SSL_KEY_STORE_PASSWORD:ussis711}
    key-store-type: JKS
    key-alias: ${SSL_KEY_ALIAS:kejiapi.cn}

spring:
  application:
    name: cursor-quitter-web

  # 数据库配置 - 阿里云PostgreSQL
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: org.postgresql.Driver
    # 阿里云PostgreSQL连接URL格式：jdbc:postgresql://host:port/database
    url: ${DATABASE_URL:jdbc:postgresql://pgm-bp1e87276l1jnkd00o.pg.rds.aliyuncs.com:5432/keji?autoCommit=false}
    username: keji
    password: Yiluxiangbei1314!
    
    # Druid连接池配置
    druid:
      initial-size: 5
      min-idle: 5
      max-active: 20
      max-wait: 60000
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      filters: stat,wall
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 禁用自动提交
      default-auto-commit: false
      web-stat-filter:
        enabled: true
        url-pattern: /*
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        reset-enable: false
        login-username: admin
        login-password: admin

  # JPA配置 - 针对PostgreSQL优化
  jpa:
    hibernate:
      ddl-auto: ${DDL_AUTO:update}  # 临时改为 update，允许自动更新数据库模式
    show-sql: ${SHOW_SQL:false}
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        # PostgreSQL特定配置
        jdbc:
          time_zone: UTC
        # 连接池配置
        connection:
          provider_disables_autocommit: true
        # 事务配置
        transaction:
          jta:
            platform: org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform
    open-in-view: false
    # 数据库平台配置
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  # Flyway数据库迁移配置
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    table: flyway_schema_history
    validate-on-migrate: true
    # PostgreSQL特定配置
    sql-migration-prefix: V
    sql-migration-separator: __
    sql-migration-suffixes: .sql

# 微信配置
wechat:
  app-id: ${WECHAT_APP_ID:your_wechat_app_id_here}
  app-secret: ${WECHAT_APP_SECRET:your_wechat_app_secret_here}
  code2-session-url: https://api.weixin.qq.com/sns/jscode2session
  user-info-url: https://api.weixin.qq.com/sns/userinfo

# Apple 登录配置
apple:
  # Apple App ID / Client ID（例如：com.yourcompany.yourapp）
  client-id: ${APPLE_CLIENT_ID:}

# 阿里云OSS配置
aliyun:
  oss:
    endpoint: ${ALIYUN_OSS_ENDPOINT:https://oss-cn-beijing.aliyuncs.com}
    access-key-id: ${MQTT_ACCESS_KEY:}
    access-key-secret: ${MQTT_SECRET_KEY:}
    bucket-name: quittr
    # 视频文件目录前缀
    video-prefix: ${ALIYUN_OSS_VIDEO_PREFIX:library/}
    # 签名URL过期时间（秒）
    url-expiration: ${ALIYUN_OSS_URL_EXPIRATION:3600}

# MQTT配置 - 阿里云MQ4IoT（完全按照官方示例）
mqtt:
  # 阿里云MQ4IoT实例信息
  instance:
    id: ${MQTT_INSTANCE_ID:}
  # 接入点地址
  endpoint: ${MQTT_ENDPOINT:}
  # 阿里云AccessKey认证 - 必须通过环境变量设置
  access-key: ${MQTT_ACCESS_KEY:}
  secret-key: ${MQTT_SECRET_KEY:}
  # MQ4IoT客户端配置
  group:
    id: ${MQTT_GROUP_ID:}
  device:
    id: ${MQTT_DEVICE_ID:}
  # 主题配置
  parent:
    topic: ${MQTT_PARENT_TOPIC:}
  # QoS配置
  qos:
    level: ${MQTT_QOS_LEVEL:0}
  # 连接配置 - 使用SSL连接（推荐）或TCP连接
  port:
    ssl: ${MQTT_SSL_PORT:8883}
    tcp: ${MQTT_TCP_PORT:1883}
  # 连接选项
  connection:
    # 使用SSL连接（推荐）
    use-ssl: ${MQTT_USE_SSL:true}
    # 连接超时时间（秒）
    timeout: ${MQTT_CONNECTION_TIMEOUT:30}
    # 保持连接间隔（秒）
    keep-alive: ${MQTT_KEEP_ALIVE:120}
    # 自动重连
    auto-reconnect: ${MQTT_AUTO_RECONNECT:true}
    # 重连延迟（毫秒）
    reconnect-delay: ${MQTT_RECONNECT_DELAY:5000}
    # 最大重连次数
    max-reconnect-attempts: ${MQTT_MAX_RECONNECT_ATTEMPTS:10}



# 日志配置
logging:
  config: classpath:logback-spring.xml
  level:
    com.example.cursorquitterweb: DEBUG
    org.springframework.web: DEBUG
    org.hibernate.SQL: ${HIBERNATE_SQL_LOG:false}
    org.hibernate.type.descriptor.sql.BasicBinder: ${HIBERNATE_SQL_LOG:false}
    com.alibaba.druid: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n"

# 管理端点配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,loggers
  endpoint:
    health:
      show-details: always
    loggers:
      enabled: true